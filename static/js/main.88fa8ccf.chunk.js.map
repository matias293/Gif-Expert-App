{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAG3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBE,OACI,mCACI,sBAAMC,SAZK,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAQZ,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBQ,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,e,+BCVhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBRM,GAhBQ,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAON,IACtB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACCxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAI1B,CAACpB,IACIqB,EDbuBI,CAAazB,GAApCoB,EAAP,EAAOA,QAAaP,EAApB,EAAeN,KAGf,OACI,qCAEI,oBAAIS,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEd,qBAAKA,UAAU,YAAf,SAEaH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEhBvBe,EAAe,WAG1B,MAAoCxC,mBAAS,CAAC,kBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACE,gCACM,gDAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEI0C,EAAWlB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEGA,SAAYA,GADPA,YChBxB4B,IAASC,OACH,cAAC,EAAD,IAEJC,SAASC,eAAe,W","file":"static/js/main.88fa8ccf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n  \r\n  const handleInputChange = (e) => {\r\n      \r\n      setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      if(inputValue.trim().length > 2) {\r\n          setCategorias(cat => [inputValue,...cat ])\r\n          setInputValue('')\r\n          \r\n      }\r\n\r\n      \r\n}\r\n    return (\r\n        <>\r\n            <form onSubmit = { handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value= {inputValue}\r\n                    onChange ={ handleInputChange}\r\n                />\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MEbPPqaC5cwnEGNsms2VGxv3VqNWoHAd`\r\n    const respuesta = await fetch(url)\r\n\r\n    const {data} = await respuesta.json()\r\n    \r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   \r\n    \r\n        return gifs\r\n\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {loading,data:images} = useFetchGifs(category)\r\n    \r\n\r\n    return (\r\n        <>\r\n       \r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      \r\n        { <div className=\"card-grid\">\r\n                   {\r\n                       images.map((img) =>(\r\n                           <GifGridItem \r\n                           key={img.id}\r\n                            {...img}\r\n                           />\r\n                       ))\r\n                   }\r\n            \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect( () => {\r\n                getGifs(category)\r\n                .then(img => {\r\n                    setState({ \r\n                        data:img,\r\n                        loading:false\r\n                    })\r\n                 \r\n                })\r\n    },[category])\r\n    return state\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\n  const [categorias, setCategorias] = useState(['Bart Simpsons'])\r\n\r\n  return(\r\n    <div>\r\n          <h2>Gif Expert App</h2>\r\n\r\n          <AddCategory setCategorias={setCategorias}/>\r\n          <hr/> \r\n\r\n\r\n          <ol>\r\n            {\r\n              categorias.map( category =>(\r\n                <GifGrid \r\n                   key={category}\r\n                   category = {category}/>\r\n              ) )\r\n            }\r\n          </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n      <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}